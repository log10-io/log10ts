/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { feedbackTasksCreate } from "../funcs/feedbackTasksCreate.js";
import { feedbackTasksGet } from "../funcs/feedbackTasksGet.js";
import { feedbackTasksList } from "../funcs/feedbackTasksList.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as models from "../models/index.js";
import { unwrapAsync } from "../types/fp.js";

export class FeedbackTasks extends ClientSDK {
  /**
   * List feedback tasks.
   */
  async list(
    options?: RequestOptions,
  ): Promise<models.ListFeedbackTasksResponse> {
    return unwrapAsync(feedbackTasksList(
      this,
      options,
    ));
  }

  /**
   * Create a new task.
   */
  async create(
    request?: models.Task | undefined,
    options?: RequestOptions,
  ): Promise<models.CreateFeedbackTaskResponse> {
    return unwrapAsync(feedbackTasksCreate(
      this,
      request,
      options,
    ));
  }

  /**
   * Retrieves feedback task `taskId`.
   */
  async get(
    taskId: string,
    options?: RequestOptions,
  ): Promise<models.GetFeedbackTaskResponse> {
    return unwrapAsync(feedbackTasksGet(
      this,
      taskId,
      options,
    ));
  }
}
