/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { completionsCreate } from "../funcs/completionsCreate.js";
import { completionsListUngraded } from "../funcs/completionsListUngraded.js";
import { completionsUpdate } from "../funcs/completionsUpdate.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as models from "../models/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Completions extends ClientSDK {
  /**
   * Create a completion
   */
  async create(
    completion: models.Completion,
    xLog10Organization?: string | undefined,
    options?: RequestOptions,
  ): Promise<models.CreateResponse> {
    return unwrapAsync(completionsCreate(
      this,
      completion,
      xLog10Organization,
      options,
    ));
  }

  /**
   * Update completion by id.
   */
  async update(
    completion: models.Completion,
    completionId: string,
    xLog10Organization?: string | undefined,
    options?: RequestOptions,
  ): Promise<models.UpdateResponse> {
    return unwrapAsync(completionsUpdate(
      this,
      completion,
      completionId,
      xLog10Organization,
      options,
    ));
  }

  /**
   * List ungraded completions i.e. completions that have not been associated with feedback but matches task selector.
   */
  async listUngraded(
    xLog10Organization?: string | undefined,
    options?: RequestOptions,
  ): Promise<models.ListUngradedResponse> {
    return unwrapAsync(completionsListUngraded(
      this,
      xLog10Organization,
      options,
    ));
  }
}
