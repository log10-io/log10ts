/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * The type of the content part.
 */
export enum Type {
    Text = "text",
}

export type ChatCompletionRequestMessageContentPartText = {
    /**
     * The type of the content part.
     */
    type: Type;
    /**
     * The text content.
     */
    text: string;
};

/** @internal */
export namespace Type$ {
    export const inboundSchema = z.nativeEnum(Type);
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace ChatCompletionRequestMessageContentPartText$ {
    export const inboundSchema: z.ZodType<
        ChatCompletionRequestMessageContentPartText,
        z.ZodTypeDef,
        unknown
    > = z.object({
        type: Type$.inboundSchema,
        text: z.string(),
    });

    export type Outbound = {
        type: string;
        text: string;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        ChatCompletionRequestMessageContentPartText
    > = z.object({
        type: Type$.outboundSchema,
        text: z.string(),
    });
}
