/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * The type of the tool. Currently, only `function` is supported.
 */
export enum ChatCompletionMessageToolCallType {
    Function = "function",
}

/**
 * The function that the model called.
 */
export type FunctionT = {
    /**
     * The name of the function to call.
     */
    name: string;
    /**
     * The arguments to call the function with, as generated by the model in JSON format. Note that the model does not always generate valid JSON, and may hallucinate parameters not defined by your function schema. Validate the arguments in your code before calling your function.
     */
    arguments: string;
};

export type ChatCompletionMessageToolCall = {
    /**
     * The ID of the tool call.
     */
    id: string;
    /**
     * The type of the tool. Currently, only `function` is supported.
     */
    type: ChatCompletionMessageToolCallType;
    /**
     * The function that the model called.
     */
    function: FunctionT;
};

/** @internal */
export const ChatCompletionMessageToolCallType$inboundSchema: z.ZodNativeEnum<
    typeof ChatCompletionMessageToolCallType
> = z.nativeEnum(ChatCompletionMessageToolCallType);

/** @internal */
export const ChatCompletionMessageToolCallType$outboundSchema: z.ZodNativeEnum<
    typeof ChatCompletionMessageToolCallType
> = ChatCompletionMessageToolCallType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatCompletionMessageToolCallType$ {
    /** @deprecated use `ChatCompletionMessageToolCallType$inboundSchema` instead. */
    export const inboundSchema = ChatCompletionMessageToolCallType$inboundSchema;
    /** @deprecated use `ChatCompletionMessageToolCallType$outboundSchema` instead. */
    export const outboundSchema = ChatCompletionMessageToolCallType$outboundSchema;
}

/** @internal */
export const FunctionT$inboundSchema: z.ZodType<FunctionT, z.ZodTypeDef, unknown> = z.object({
    name: z.string(),
    arguments: z.string(),
});

/** @internal */
export type FunctionT$Outbound = {
    name: string;
    arguments: string;
};

/** @internal */
export const FunctionT$outboundSchema: z.ZodType<FunctionT$Outbound, z.ZodTypeDef, FunctionT> =
    z.object({
        name: z.string(),
        arguments: z.string(),
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FunctionT$ {
    /** @deprecated use `FunctionT$inboundSchema` instead. */
    export const inboundSchema = FunctionT$inboundSchema;
    /** @deprecated use `FunctionT$outboundSchema` instead. */
    export const outboundSchema = FunctionT$outboundSchema;
    /** @deprecated use `FunctionT$Outbound` instead. */
    export type Outbound = FunctionT$Outbound;
}

/** @internal */
export const ChatCompletionMessageToolCall$inboundSchema: z.ZodType<
    ChatCompletionMessageToolCall,
    z.ZodTypeDef,
    unknown
> = z.object({
    id: z.string(),
    type: ChatCompletionMessageToolCallType$inboundSchema,
    function: z.lazy(() => FunctionT$inboundSchema),
});

/** @internal */
export type ChatCompletionMessageToolCall$Outbound = {
    id: string;
    type: string;
    function: FunctionT$Outbound;
};

/** @internal */
export const ChatCompletionMessageToolCall$outboundSchema: z.ZodType<
    ChatCompletionMessageToolCall$Outbound,
    z.ZodTypeDef,
    ChatCompletionMessageToolCall
> = z.object({
    id: z.string(),
    type: ChatCompletionMessageToolCallType$outboundSchema,
    function: z.lazy(() => FunctionT$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatCompletionMessageToolCall$ {
    /** @deprecated use `ChatCompletionMessageToolCall$inboundSchema` instead. */
    export const inboundSchema = ChatCompletionMessageToolCall$inboundSchema;
    /** @deprecated use `ChatCompletionMessageToolCall$outboundSchema` instead. */
    export const outboundSchema = ChatCompletionMessageToolCall$outboundSchema;
    /** @deprecated use `ChatCompletionMessageToolCall$Outbound` instead. */
    export type Outbound = ChatCompletionMessageToolCall$Outbound;
}
