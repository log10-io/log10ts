/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../lib/primitives.js";
import { Completion, Completion$ } from "./completion.js";
import { HTTPMetadata, HTTPMetadata$ } from "./httpmetadata.js";
import * as z from "zod";

export type ListUngradedGlobals = {
    xLog10Organization?: string | undefined;
};

export type ListUngradedRequest = {
    xLog10Organization?: string | undefined;
};

/**
 * OK
 */
export type ListUngradedResponseBody = {
    completions?: Array<Completion> | undefined;
};

export type ListUngradedResponse = {
    httpMeta: HTTPMetadata;
    /**
     * OK
     */
    object?: ListUngradedResponseBody | undefined;
};

/** @internal */
export namespace ListUngradedGlobals$ {
    export const inboundSchema: z.ZodType<ListUngradedGlobals, z.ZodTypeDef, unknown> = z
        .object({
            "X-Log10-Organization": z.string().optional(),
        })
        .transform((v) => {
            return remap$(v, {
                "X-Log10-Organization": "xLog10Organization",
            });
        });

    export type Outbound = {
        "X-Log10-Organization"?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ListUngradedGlobals> = z
        .object({
            xLog10Organization: z.string().optional(),
        })
        .transform((v) => {
            return remap$(v, {
                xLog10Organization: "X-Log10-Organization",
            });
        });
}

/** @internal */
export namespace ListUngradedRequest$ {
    export const inboundSchema: z.ZodType<ListUngradedRequest, z.ZodTypeDef, unknown> = z
        .object({
            "X-Log10-Organization": z.string().optional(),
        })
        .transform((v) => {
            return remap$(v, {
                "X-Log10-Organization": "xLog10Organization",
            });
        });

    export type Outbound = {
        "X-Log10-Organization"?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ListUngradedRequest> = z
        .object({
            xLog10Organization: z.string().optional(),
        })
        .transform((v) => {
            return remap$(v, {
                xLog10Organization: "X-Log10-Organization",
            });
        });
}

/** @internal */
export namespace ListUngradedResponseBody$ {
    export const inboundSchema: z.ZodType<ListUngradedResponseBody, z.ZodTypeDef, unknown> =
        z.object({
            completions: z.array(Completion$.inboundSchema).optional(),
        });

    export type Outbound = {
        completions?: Array<Completion$.Outbound> | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ListUngradedResponseBody> =
        z.object({
            completions: z.array(Completion$.outboundSchema).optional(),
        });
}

/** @internal */
export namespace ListUngradedResponse$ {
    export const inboundSchema: z.ZodType<ListUngradedResponse, z.ZodTypeDef, unknown> = z
        .object({
            HttpMeta: HTTPMetadata$.inboundSchema,
            object: z.lazy(() => ListUngradedResponseBody$.inboundSchema).optional(),
        })
        .transform((v) => {
            return remap$(v, {
                HttpMeta: "httpMeta",
            });
        });

    export type Outbound = {
        HttpMeta: HTTPMetadata$.Outbound;
        object?: ListUngradedResponseBody$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ListUngradedResponse> = z
        .object({
            httpMeta: HTTPMetadata$.outboundSchema,
            object: z.lazy(() => ListUngradedResponseBody$.outboundSchema).optional(),
        })
        .transform((v) => {
            return remap$(v, {
                httpMeta: "HttpMeta",
            });
        });
}
