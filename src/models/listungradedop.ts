/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../lib/primitives.js";
import {
    Completion,
    Completion$inboundSchema,
    Completion$Outbound,
    Completion$outboundSchema,
} from "./completion.js";
import {
    HTTPMetadata,
    HTTPMetadata$inboundSchema,
    HTTPMetadata$Outbound,
    HTTPMetadata$outboundSchema,
} from "./httpmetadata.js";
import * as z from "zod";

export type ListUngradedGlobals = {
    xLog10Organization?: string | undefined;
};

export type ListUngradedRequest = {
    xLog10Organization?: string | undefined;
};

/**
 * OK
 */
export type ListUngradedResponseBody = {
    completions?: Array<Completion> | undefined;
};

export type ListUngradedResponse = {
    httpMeta: HTTPMetadata;
    /**
     * OK
     */
    object?: ListUngradedResponseBody | undefined;
};

/** @internal */
export const ListUngradedGlobals$inboundSchema: z.ZodType<
    ListUngradedGlobals,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        "X-Log10-Organization": z.string().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            "X-Log10-Organization": "xLog10Organization",
        });
    });

/** @internal */
export type ListUngradedGlobals$Outbound = {
    "X-Log10-Organization"?: string | undefined;
};

/** @internal */
export const ListUngradedGlobals$outboundSchema: z.ZodType<
    ListUngradedGlobals$Outbound,
    z.ZodTypeDef,
    ListUngradedGlobals
> = z
    .object({
        xLog10Organization: z.string().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            xLog10Organization: "X-Log10-Organization",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListUngradedGlobals$ {
    /** @deprecated use `ListUngradedGlobals$inboundSchema` instead. */
    export const inboundSchema = ListUngradedGlobals$inboundSchema;
    /** @deprecated use `ListUngradedGlobals$outboundSchema` instead. */
    export const outboundSchema = ListUngradedGlobals$outboundSchema;
    /** @deprecated use `ListUngradedGlobals$Outbound` instead. */
    export type Outbound = ListUngradedGlobals$Outbound;
}

/** @internal */
export const ListUngradedRequest$inboundSchema: z.ZodType<
    ListUngradedRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        "X-Log10-Organization": z.string().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            "X-Log10-Organization": "xLog10Organization",
        });
    });

/** @internal */
export type ListUngradedRequest$Outbound = {
    "X-Log10-Organization"?: string | undefined;
};

/** @internal */
export const ListUngradedRequest$outboundSchema: z.ZodType<
    ListUngradedRequest$Outbound,
    z.ZodTypeDef,
    ListUngradedRequest
> = z
    .object({
        xLog10Organization: z.string().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            xLog10Organization: "X-Log10-Organization",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListUngradedRequest$ {
    /** @deprecated use `ListUngradedRequest$inboundSchema` instead. */
    export const inboundSchema = ListUngradedRequest$inboundSchema;
    /** @deprecated use `ListUngradedRequest$outboundSchema` instead. */
    export const outboundSchema = ListUngradedRequest$outboundSchema;
    /** @deprecated use `ListUngradedRequest$Outbound` instead. */
    export type Outbound = ListUngradedRequest$Outbound;
}

/** @internal */
export const ListUngradedResponseBody$inboundSchema: z.ZodType<
    ListUngradedResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    completions: z.array(Completion$inboundSchema).optional(),
});

/** @internal */
export type ListUngradedResponseBody$Outbound = {
    completions?: Array<Completion$Outbound> | undefined;
};

/** @internal */
export const ListUngradedResponseBody$outboundSchema: z.ZodType<
    ListUngradedResponseBody$Outbound,
    z.ZodTypeDef,
    ListUngradedResponseBody
> = z.object({
    completions: z.array(Completion$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListUngradedResponseBody$ {
    /** @deprecated use `ListUngradedResponseBody$inboundSchema` instead. */
    export const inboundSchema = ListUngradedResponseBody$inboundSchema;
    /** @deprecated use `ListUngradedResponseBody$outboundSchema` instead. */
    export const outboundSchema = ListUngradedResponseBody$outboundSchema;
    /** @deprecated use `ListUngradedResponseBody$Outbound` instead. */
    export type Outbound = ListUngradedResponseBody$Outbound;
}

/** @internal */
export const ListUngradedResponse$inboundSchema: z.ZodType<
    ListUngradedResponse,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        HttpMeta: HTTPMetadata$inboundSchema,
        object: z.lazy(() => ListUngradedResponseBody$inboundSchema).optional(),
    })
    .transform((v) => {
        return remap$(v, {
            HttpMeta: "httpMeta",
        });
    });

/** @internal */
export type ListUngradedResponse$Outbound = {
    HttpMeta: HTTPMetadata$Outbound;
    object?: ListUngradedResponseBody$Outbound | undefined;
};

/** @internal */
export const ListUngradedResponse$outboundSchema: z.ZodType<
    ListUngradedResponse$Outbound,
    z.ZodTypeDef,
    ListUngradedResponse
> = z
    .object({
        httpMeta: HTTPMetadata$outboundSchema,
        object: z.lazy(() => ListUngradedResponseBody$outboundSchema).optional(),
    })
    .transform((v) => {
        return remap$(v, {
            httpMeta: "HttpMeta",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListUngradedResponse$ {
    /** @deprecated use `ListUngradedResponse$inboundSchema` instead. */
    export const inboundSchema = ListUngradedResponse$inboundSchema;
    /** @deprecated use `ListUngradedResponse$outboundSchema` instead. */
    export const outboundSchema = ListUngradedResponse$outboundSchema;
    /** @deprecated use `ListUngradedResponse$Outbound` instead. */
    export type Outbound = ListUngradedResponse$Outbound;
}
