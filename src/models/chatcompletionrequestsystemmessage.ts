/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { ChatCompletionRole, ChatCompletionRole$ } from "./chatcompletionrole.js";
import * as z from "zod";

export type ChatCompletionRequestSystemMessage = {
    /**
     * The contents of the system message.
     */
    content: string;
    /**
     * The role of the author of a message
     */
    role: ChatCompletionRole;
    /**
     * An optional name for the participant. Provides the model information to differentiate between participants of the same role.
     */
    name?: string | undefined;
};

/** @internal */
export namespace ChatCompletionRequestSystemMessage$ {
    export const inboundSchema: z.ZodType<
        ChatCompletionRequestSystemMessage,
        z.ZodTypeDef,
        unknown
    > = z.object({
        content: z.string(),
        role: ChatCompletionRole$.inboundSchema,
        name: z.string().optional(),
    });

    export type Outbound = {
        content: string;
        role: string;
        name?: string | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        ChatCompletionRequestSystemMessage
    > = z.object({
        content: z.string(),
        role: ChatCompletionRole$.outboundSchema,
        name: z.string().optional(),
    });
}
