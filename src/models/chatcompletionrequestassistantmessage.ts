/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../lib/primitives.js";
import {
    ChatCompletionMessageToolCall,
    ChatCompletionMessageToolCall$inboundSchema,
    ChatCompletionMessageToolCall$Outbound,
    ChatCompletionMessageToolCall$outboundSchema,
} from "./chatcompletionmessagetoolcall.js";
import {
    ChatCompletionRole,
    ChatCompletionRole$inboundSchema,
    ChatCompletionRole$outboundSchema,
} from "./chatcompletionrole.js";
import * as z from "zod";

/**
 * Deprecated and replaced by `tool_calls`. The name and arguments of a function that should be called, as generated by the model.
 *
 * @deprecated class: This will be removed in a future release, please migrate away from it as soon as possible.
 */
export type FunctionCall = {
    /**
     * The arguments to call the function with, as generated by the model in JSON format. Note that the model does not always generate valid JSON, and may hallucinate parameters not defined by your function schema. Validate the arguments in your code before calling your function.
     */
    arguments: string;
    /**
     * The name of the function to call.
     */
    name: string;
};

export type ChatCompletionRequestAssistantMessage = {
    /**
     * The contents of the assistant message. Required unless `tool_calls` or `function_call` is specified.
     *
     * @remarks
     *
     */
    content?: string | null | undefined;
    /**
     * The role of the author of a message
     */
    role: ChatCompletionRole;
    /**
     * An optional name for the participant. Provides the model information to differentiate between participants of the same role.
     */
    name?: string | undefined;
    /**
     * The tool calls generated by the model, such as function calls.
     */
    toolCalls?: Array<ChatCompletionMessageToolCall> | undefined;
    /**
     * Deprecated and replaced by `tool_calls`. The name and arguments of a function that should be called, as generated by the model.
     *
     * @deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    functionCall?: FunctionCall | undefined;
};

/** @internal */
export const FunctionCall$inboundSchema: z.ZodType<FunctionCall, z.ZodTypeDef, unknown> = z.object({
    arguments: z.string(),
    name: z.string(),
});

/** @internal */
export type FunctionCall$Outbound = {
    arguments: string;
    name: string;
};

/** @internal */
export const FunctionCall$outboundSchema: z.ZodType<
    FunctionCall$Outbound,
    z.ZodTypeDef,
    FunctionCall
> = z.object({
    arguments: z.string(),
    name: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FunctionCall$ {
    /** @deprecated use `FunctionCall$inboundSchema` instead. */
    export const inboundSchema = FunctionCall$inboundSchema;
    /** @deprecated use `FunctionCall$outboundSchema` instead. */
    export const outboundSchema = FunctionCall$outboundSchema;
    /** @deprecated use `FunctionCall$Outbound` instead. */
    export type Outbound = FunctionCall$Outbound;
}

/** @internal */
export const ChatCompletionRequestAssistantMessage$inboundSchema: z.ZodType<
    ChatCompletionRequestAssistantMessage,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        content: z.nullable(z.string()).optional(),
        role: ChatCompletionRole$inboundSchema,
        name: z.string().optional(),
        tool_calls: z.array(ChatCompletionMessageToolCall$inboundSchema).optional(),
        function_call: z.lazy(() => FunctionCall$inboundSchema).optional(),
    })
    .transform((v) => {
        return remap$(v, {
            tool_calls: "toolCalls",
            function_call: "functionCall",
        });
    });

/** @internal */
export type ChatCompletionRequestAssistantMessage$Outbound = {
    content?: string | null | undefined;
    role: string;
    name?: string | undefined;
    tool_calls?: Array<ChatCompletionMessageToolCall$Outbound> | undefined;
    function_call?: FunctionCall$Outbound | undefined;
};

/** @internal */
export const ChatCompletionRequestAssistantMessage$outboundSchema: z.ZodType<
    ChatCompletionRequestAssistantMessage$Outbound,
    z.ZodTypeDef,
    ChatCompletionRequestAssistantMessage
> = z
    .object({
        content: z.nullable(z.string()).optional(),
        role: ChatCompletionRole$outboundSchema,
        name: z.string().optional(),
        toolCalls: z.array(ChatCompletionMessageToolCall$outboundSchema).optional(),
        functionCall: z.lazy(() => FunctionCall$outboundSchema).optional(),
    })
    .transform((v) => {
        return remap$(v, {
            toolCalls: "tool_calls",
            functionCall: "function_call",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatCompletionRequestAssistantMessage$ {
    /** @deprecated use `ChatCompletionRequestAssistantMessage$inboundSchema` instead. */
    export const inboundSchema = ChatCompletionRequestAssistantMessage$inboundSchema;
    /** @deprecated use `ChatCompletionRequestAssistantMessage$outboundSchema` instead. */
    export const outboundSchema = ChatCompletionRequestAssistantMessage$outboundSchema;
    /** @deprecated use `ChatCompletionRequestAssistantMessage$Outbound` instead. */
    export type Outbound = ChatCompletionRequestAssistantMessage$Outbound;
}
