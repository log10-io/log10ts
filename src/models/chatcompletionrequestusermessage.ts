/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
    ChatCompletionRequestMessageContentPart,
    ChatCompletionRequestMessageContentPart$,
} from "./chatcompletionrequestmessagecontentpart.js";
import { ChatCompletionRole, ChatCompletionRole$ } from "./chatcompletionrole.js";
import * as z from "zod";

/**
 * The contents of the user message.
 *
 * @remarks
 *
 */
export type Content = string | Array<ChatCompletionRequestMessageContentPart>;

export type ChatCompletionRequestUserMessage = {
    /**
     * The contents of the user message.
     *
     * @remarks
     *
     */
    content: string | Array<ChatCompletionRequestMessageContentPart>;
    /**
     * The role of the author of a message
     */
    role: ChatCompletionRole;
    /**
     * An optional name for the participant. Provides the model information to differentiate between participants of the same role.
     */
    name?: string | undefined;
};

/** @internal */
export namespace Content$ {
    export const inboundSchema: z.ZodType<Content, z.ZodTypeDef, unknown> = z.union([
        z.string(),
        z.array(ChatCompletionRequestMessageContentPart$.inboundSchema),
    ]);

    export type Outbound = string | Array<ChatCompletionRequestMessageContentPart$.Outbound>;
    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Content> = z.union([
        z.string(),
        z.array(ChatCompletionRequestMessageContentPart$.outboundSchema),
    ]);
}

/** @internal */
export namespace ChatCompletionRequestUserMessage$ {
    export const inboundSchema: z.ZodType<ChatCompletionRequestUserMessage, z.ZodTypeDef, unknown> =
        z.object({
            content: z.union([
                z.string(),
                z.array(ChatCompletionRequestMessageContentPart$.inboundSchema),
            ]),
            role: ChatCompletionRole$.inboundSchema,
            name: z.string().optional(),
        });

    export type Outbound = {
        content: string | Array<ChatCompletionRequestMessageContentPart$.Outbound>;
        role: string;
        name?: string | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        ChatCompletionRequestUserMessage
    > = z.object({
        content: z.union([
            z.string(),
            z.array(ChatCompletionRequestMessageContentPart$.outboundSchema),
        ]),
        role: ChatCompletionRole$.outboundSchema,
        name: z.string().optional(),
    });
}
