/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./sdkvalidationerror.js";

/**
 * The type of the content part.
 */
export enum Type {
  Text = "text",
}

export type ChatCompletionRequestMessageContentPartText = {
  /**
   * The type of the content part.
   */
  type: Type;
  /**
   * The text content.
   */
  text: string;
};

/** @internal */
export const Type$inboundSchema: z.ZodNativeEnum<typeof Type> = z.nativeEnum(
  Type,
);

/** @internal */
export const Type$outboundSchema: z.ZodNativeEnum<typeof Type> =
  Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Type$ {
  /** @deprecated use `Type$inboundSchema` instead. */
  export const inboundSchema = Type$inboundSchema;
  /** @deprecated use `Type$outboundSchema` instead. */
  export const outboundSchema = Type$outboundSchema;
}

/** @internal */
export const ChatCompletionRequestMessageContentPartText$inboundSchema:
  z.ZodType<
    ChatCompletionRequestMessageContentPartText,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type: Type$inboundSchema,
    text: z.string(),
  });

/** @internal */
export type ChatCompletionRequestMessageContentPartText$Outbound = {
  type: string;
  text: string;
};

/** @internal */
export const ChatCompletionRequestMessageContentPartText$outboundSchema:
  z.ZodType<
    ChatCompletionRequestMessageContentPartText$Outbound,
    z.ZodTypeDef,
    ChatCompletionRequestMessageContentPartText
  > = z.object({
    type: Type$outboundSchema,
    text: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatCompletionRequestMessageContentPartText$ {
  /** @deprecated use `ChatCompletionRequestMessageContentPartText$inboundSchema` instead. */
  export const inboundSchema =
    ChatCompletionRequestMessageContentPartText$inboundSchema;
  /** @deprecated use `ChatCompletionRequestMessageContentPartText$outboundSchema` instead. */
  export const outboundSchema =
    ChatCompletionRequestMessageContentPartText$outboundSchema;
  /** @deprecated use `ChatCompletionRequestMessageContentPartText$Outbound` instead. */
  export type Outbound = ChatCompletionRequestMessageContentPartText$Outbound;
}

export function chatCompletionRequestMessageContentPartTextToJSON(
  chatCompletionRequestMessageContentPartText:
    ChatCompletionRequestMessageContentPartText,
): string {
  return JSON.stringify(
    ChatCompletionRequestMessageContentPartText$outboundSchema.parse(
      chatCompletionRequestMessageContentPartText,
    ),
  );
}

export function chatCompletionRequestMessageContentPartTextFromJSON(
  jsonString: string,
): SafeParseResult<
  ChatCompletionRequestMessageContentPartText,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      ChatCompletionRequestMessageContentPartText$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'ChatCompletionRequestMessageContentPartText' from JSON`,
  );
}
