/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { FunctionObject, FunctionObject$ } from "./functionobject.js";
import * as z from "zod";

/**
 * The type of the tool. Currently, only `function` is supported.
 */
export enum ChatCompletionToolType {
    Function = "function",
}

export type ChatCompletionTool = {
    /**
     * The type of the tool. Currently, only `function` is supported.
     */
    type: ChatCompletionToolType;
    function: FunctionObject;
};

/** @internal */
export namespace ChatCompletionToolType$ {
    export const inboundSchema: z.ZodNativeEnum<typeof ChatCompletionToolType> =
        z.nativeEnum(ChatCompletionToolType);
    export const outboundSchema: z.ZodNativeEnum<typeof ChatCompletionToolType> = inboundSchema;
}

/** @internal */
export namespace ChatCompletionTool$ {
    export const inboundSchema: z.ZodType<ChatCompletionTool, z.ZodTypeDef, unknown> = z.object({
        type: ChatCompletionToolType$.inboundSchema,
        function: FunctionObject$.inboundSchema,
    });

    export type Outbound = {
        type: string;
        function: FunctionObject$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ChatCompletionTool> = z.object({
        type: ChatCompletionToolType$.outboundSchema,
        function: FunctionObject$.outboundSchema,
    });
}
