/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../lib/primitives.js";
import { HTTPMetadata, HTTPMetadata$ } from "./httpmetadata.js";
import { Session, Session$ } from "./session.js";
import * as z from "zod";

export type CreateSessionGlobals = {
    xLog10Organization?: string | undefined;
};

export type CreateSessionRequest = {
    xLog10Organization?: string | undefined;
};

/**
 * Created
 */
export type CreateSessionResponseBody = {
    session?: Session | undefined;
};

export type CreateSessionResponse = {
    httpMeta: HTTPMetadata;
    /**
     * Created
     */
    object?: CreateSessionResponseBody | undefined;
};

/** @internal */
export namespace CreateSessionGlobals$ {
    export const inboundSchema: z.ZodType<CreateSessionGlobals, z.ZodTypeDef, unknown> = z
        .object({
            "X-Log10-Organization": z.string().optional(),
        })
        .transform((v) => {
            return remap$(v, {
                "X-Log10-Organization": "xLog10Organization",
            });
        });

    export type Outbound = {
        "X-Log10-Organization"?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateSessionGlobals> = z
        .object({
            xLog10Organization: z.string().optional(),
        })
        .transform((v) => {
            return remap$(v, {
                xLog10Organization: "X-Log10-Organization",
            });
        });
}

/** @internal */
export namespace CreateSessionRequest$ {
    export const inboundSchema: z.ZodType<CreateSessionRequest, z.ZodTypeDef, unknown> = z
        .object({
            "X-Log10-Organization": z.string().optional(),
        })
        .transform((v) => {
            return remap$(v, {
                "X-Log10-Organization": "xLog10Organization",
            });
        });

    export type Outbound = {
        "X-Log10-Organization"?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateSessionRequest> = z
        .object({
            xLog10Organization: z.string().optional(),
        })
        .transform((v) => {
            return remap$(v, {
                xLog10Organization: "X-Log10-Organization",
            });
        });
}

/** @internal */
export namespace CreateSessionResponseBody$ {
    export const inboundSchema: z.ZodType<CreateSessionResponseBody, z.ZodTypeDef, unknown> =
        z.object({
            session: Session$.inboundSchema.optional(),
        });

    export type Outbound = {
        session?: Session$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateSessionResponseBody> =
        z.object({
            session: Session$.outboundSchema.optional(),
        });
}

/** @internal */
export namespace CreateSessionResponse$ {
    export const inboundSchema: z.ZodType<CreateSessionResponse, z.ZodTypeDef, unknown> = z
        .object({
            HttpMeta: HTTPMetadata$.inboundSchema,
            object: z.lazy(() => CreateSessionResponseBody$.inboundSchema).optional(),
        })
        .transform((v) => {
            return remap$(v, {
                HttpMeta: "httpMeta",
            });
        });

    export type Outbound = {
        HttpMeta: HTTPMetadata$.Outbound;
        object?: CreateSessionResponseBody$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateSessionResponse> = z
        .object({
            httpMeta: HTTPMetadata$.outboundSchema,
            object: z.lazy(() => CreateSessionResponseBody$.outboundSchema).optional(),
        })
        .transform((v) => {
            return remap$(v, {
                httpMeta: "HttpMeta",
            });
        });
}
